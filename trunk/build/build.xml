<project name="Aliwal Geocoder All Arches Build" default="compile" basedir="../">
<!--
	Copyright (c) Greg Nicol 2008

	This file is part of Aliwal Geocoder.
	Aliwal Geocoder is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 2 of the License, or
	(at your option) any later version.
	
	Aliwal Geocoder is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with Aliwal Geocoder.  If not, see <http://www.gnu.org/licenses/>.
-->

	<property file="build/version.properties"/>
	<property file="build/build.properties"/>
	
			
	<description>
		Muli-Architecture build process for ${NAME.SHORT}
	</description>
	
<!-- ******************** ARCH INDEPENDENT **************************************************** -->	
	<target name="diagnostics" description="diagnostics">
		<diagnostics/>
	</target>
	
	<target name="patch_number" description="Increments VERSION.PATCH in the version.properties file" >
		<!-- Thanks: http://blog.nirav.name/2008/02/how-to-auto-increament-version-build-id.html -->
		<propertyfile file="build/version.properties" comment="VERSION.PATCH incremented by ANT build. Edit not!">
			<entry key="VERSION.PATCH" type="int" operation="+" default="1" />
		</propertyfile>
	</target>
		
	<target name="clean_common" description="Reset for target compile_common.">
		<delete includeEmptyDirs="true" verbose="true">
			<fileset dir="${COMMON.BUILD.DIR}" includes="**/*" />
		</delete>
	</target>
	
	<target name="init_common" depends="" description="Init for target compile_common.">
		<mkdir dir="${COMMON.TARGET}" />
	</target>
	
	<target name="compile_common" depends="init_common"
		description="Compile the arch independent stuff. Pretty much an XPI at this stage" >
		<echo>ToDo: JAR the chrome directory and (re)do the manifest</echo>
		<copy todir="${COMMON.TARGET}" preservelastmodified="false">
			<fileset dir="./application" >
				<include name="**/*" />
				<exclude name="**/.DS_Store" />
				<exclude name="**/.svn" />
				<exclude name="**/.project" />
				<exclude name="**/*.bak" />	
			</fileset>
		</copy>
	</target>
	
	<target name="dist_common" description="Dist target for common arch">
		<echo>ToDo: http://aliwal.googlecode.com/ uploads</echo>
		<echo>ToDo: Freshmeat announcement</echo>
	</target>
	
	<target name="clean"   depends="clean_common,clean_osx,clean_win32"       description="Clean for all arches" />
	<target name="init"    depends=""                                         description="This target is here just for completeness"/>
	<target name="compile" depends="compile_common,compile_osx,compile_win32" description="Compile for all arches. Doesn't do dist targets" />
	<target name="dist"    depends="patch_number,dist_common,dist_osx"        description="Dist for all arches. Does version.patch number too" >	
		<echo>
			*********************************************************
			Todo: commit build/version.properties and do a dist_win32 build on suitable machine
			*********************************************************
		</echo>
	</target>
	
<!-- ******************** WIN32 BUILD **************************************************************** -->	
		<target name="clean_dist_win32" description="Clean up for dist target">
			<delete dir="${WIN32.DIST.DIR}"  />
		</target>
			
		<target name="clean_win32" description="Clean up for win32 compile target">	
			<echo>ToDo: clean out old versions too</echo>
			<delete dir="${WIN32.BUILD.DIR}" includeEmptyDirs="true" verbose="true" />
		</target>
		
		<target name="init_win32" depends="">
			<mkdir dir="${WIN32.BUILD.DIR}"      />	
			<delete file="${java.io.tmpdir}/xxx_lib_321.tar" />
			<tar tarfile="${java.io.tmpdir}/xxx_lib_321.tar" basedir="${WIN32.LIB.DIR}/" longfile="gnu" />
			<untar   src="${java.io.tmpdir}/xxx_lib_321.tar"   dest="${WIN32.BUILD.DIR}" overwrite="true" />
			<delete file="${java.io.tmpdir}/xxx_lib_321.tar" />
			
			<mkdir dir="${WIN32.DIST.DIR}" />
		</target>

		<target name="compile_win32" depends="init_win32,compile_common"
			description="Copy across the application" >
			<copy todir="${WIN32.BUILD.DIR}" preservelastmodified="true" includeEmptyDirs="true" >
				<fileset dir="${COMMON.TARGET}" />
			</copy>
			<echo>Need to sort out the icon. CMDline Resource editor ?</echo>
			<copy file="${WIN32.BUILD.DIR}\xulrunner\xulrunner-stub.exe" tofile="${WIN32.BUILD.DIR}\${WIN32.TARGET}" />

		</target>
		
		<target name="dist_win32" depends="clean_dist_win32,compile_win32"
			description="generate the distribution" >
			

			<exec executable="c:\Program Files\NSIS\makensis.exe" failonerror="true" >
				<arg value="/V3" />
				<arg value="/DSRC_DIR=${WIN32.BUILD.DIR}" />
				<arg value="/DINST_NAME=${NAME.FULL} Installer.exe" />
				<arg value="${WIN32.BASE.DIR}\AliwalInstaller.nsi" />
			</exec>
		</target>

<!-- ******************** OSX BUILD **************************************************************** -->	
		<target name="clean_dist_osx" description="Clean up for dist target">
			<delete file="${OSX.DIST.TARGET}"  />
			<delete file="${OSX.DIST.TMP_DMG}"  />
			<exec executable="hdiutil" failonerror="false">
				<arg value="detach" />
				<arg value="${OSX.DIST.MOUNT}" />
			</exec>
			<delete dir="${OSX.DIST.MOUNT}" />
		</target>
						
		<target name="clean_osx" description="Clean OSX compile" >
			<echo>ToDo: clean out old versions too</echo>
			<delete dir="${OSX.BUILD.DIR}"  verbose="true"	/>
		</target>
		
		<target name="init_osx" depends="">
			<!-- Create the time stamp -->
			<tstamp/>
			<mkdir dir="${OSX.BUILD.DIR}"      />				
			<delete file="${java.io.tmpdir}/xxx_lib_321.tar" />
			<exec executable="tar" dir="${OSX.LIB.DIR}" >
				<!-- Ant tar not aware of symbolic links -->
				<arg value="-cf" />
				<arg value="${java.io.tmpdir}/xxx_lib_321.tar" />
				<arg value="--exclude=.svn" />
				<arg value="." />			
			</exec>
			<exec executable="tar" dir="${OSX.BUILD.DIR}">
				<!-- Ant tar not aware of symbolic links -->
				<arg value="-xvf" />
				<arg value="${java.io.tmpdir}/xxx_lib_321.tar" />
			</exec>
			<delete file="${java.io.tmpdir}/xxx_lib_321.tar" />
			
			<mkdir dir="${OSX.MACOS}"      />
			<echo>rename XULRunner executable and do plist etc.</echo>
			<copy file="${OSX.LIB.DIR}/Contents/Frameworks/XUL.framework/Versions/Current/xulrunner" 
				todir="${OSX.MACOS}" preservelastmodified="true" />
			<echo>Changing permission of ${OSX.MACOS}/xulrunner</echo>
			<chmod file="${OSX.MACOS}/xulrunner" perm="ugo+rx" verbose="true" />
		</target>

		<target name="compile_osx" depends="init_osx,compile_common"
			description="copy across the application" >
			<mkdir dir="${OSX.RESOURCES}"  />
			<copy todir="${OSX.RESOURCES}" preservelastmodified="true" includeEmptyDirs="true">
				<fileset dir="${COMMON.TARGET}" />
			</copy>
		</target>
		
		<target name="dist_osx" depends="clean_dist_osx,compile_osx"
			description="generate the distribution" >
			<copy file="${OSX.DIST.TEMPLATE_DMG}" tofile="${OSX.DIST.TMP_DMG}" />

			<exec executable="hdiutil" failonerror="true" >
				<arg value="resize" />
				<arg value="-size" />
				<arg value="55m" />
				<arg value="-growonly" />
				<arg value="-verbose" />
				<arg value="${OSX.DIST.TMP_DMG}" />
			</exec>

			<mkdir dir="${OSX.DIST.MOUNT}" />

			<exec executable="hdiutil" failonerror="true" >
				<arg value="attach" />
				<arg value="${OSX.DIST.TMP_DMG}" />
				<arg value="-noautoopen" />
				<arg value="-verbose" />
				<arg value="-mountpoint" />
				<arg value="${OSX.DIST.MOUNT}" />
			</exec>
			
			<delete file="${java.io.tmpdir}/xxx_osxdist_321.tar" />
			<exec executable="tar" dir="${OSX.BASE.DIR}" >
				<!-- Ant copy not aware of symbolic links so tar up -->
				<arg value="-cf" />
				<arg value="${java.io.tmpdir}/xxx_osxdist_321.tar" />
				<arg value="--exclude=.svn" />
				<arg value="${OSX.TARGET}" />			
			</exec>
			<exec executable="tar" dir="${OSX.DIST.MOUNT}">
				<!-- Ant tar not aware of symbolic links -->
				<arg value="-xvf" />
				<arg value="${java.io.tmpdir}/xxx_osxdist_321.tar" />
			</exec>
			<delete file="${java.io.tmpdir}/xxx_osxdist_321.tar" />

			<exec executable="hdiutil" failonerror="true">
				<arg value="detach" />
				<arg value="${OSX.DIST.MOUNT}" />
			</exec>

			<exec executable="hdiutil" failonerror="true">
				<arg value="convert" />
				<arg value="${OSX.DIST.TMP_DMG}" />
				<arg value="-quiet" />
				<arg value="-format" />
				<arg value="UDZO" />
				<arg value="-imagekey" />
				<arg value="zlib-level=9" />
				<arg value="-o" />
				<arg value="${OSX.DIST.TARGET}" />
			</exec>

		</target>

	
	
</project>
